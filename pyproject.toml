[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nclone"
description = "N++ clone with reinforcement learning capabilities"
readme = "README.md"
requires-python = ">=3.11.2"
license = "MIT"
authors = [
    {name = "nclone contributors"}
]
keywords = ["game", "reinforcement-learning", "n++", "platformer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "pygame>=2.1.0",
    "gymnasium>=0.26.0",
    "fastmcp>=2.12.0",
    "pycairo>=1.28.0",
    "opencv-python>=4.12.0",
    "albumentations>=2.0.8",
    "pillow>=10.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",  # For parallel test execution
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0", 
    "pytest-xdist>=2.5.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "ruff>=0.13.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/nclone/nclone"
Repository = "https://github.com/nclone/nclone"
Documentation = "https://nclone.readthedocs.io"
"Bug Tracker" = "https://github.com/nclone/nclone/issues"

[tool.setuptools.packages.find]
include = ["nclone*"]

[tool.setuptools_scm]
write_to = "nclone/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["nclone"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/_version.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pygame.*",
    "gymnasium.*",
    "numpy.*",
]
ignore_missing_imports = true